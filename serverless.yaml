org: kibitzer
app: serverless-stock-service
service: serverless-stock-service

useDotenv: true

plugins:
  - serverless-offline

package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  stage: dev
  profile: lambda-docker
  ecr:
    images:
      appimage:
        path: ./

  environment:
    DATABASE_URL: ${env:DATABASE_URL}

    HOST: ${env:HOST}
    PORT: ${env:PORT}

    MIN_DEVICE_ID_LENGTH: ${env:MIN_DEVICE_ID_LENGTH}
    MAX_DEVICE_ID_LENGTH: ${env:MAX_DEVICE_ID_LENGTH}
    MIN_AMOUNT: ${env:MIN_AMOUNT}
    MAX_AMOUNT: ${env:MAX_AMOUNT}
    MIN_VENDOR_ID_LENGTH: ${env:MIN_VENDOR_ID_LENGTH}
    MAX_VENDOR_ID_LENGTH: ${env:MAX_VENDOR_ID_LENGTH}
    MIN_PRODUCT_ID_LENGTH: ${env:MIN_PRODUCT_ID_LENGTH}
    MAX_PRODUCT_ID_LENGTH: ${env:MAX_PRODUCT_ID_LENGTH}
    ORDER_AMOUNT: ${env:ORDER_AMOUNT}
    SOFTENER_THRESHOLD: ${env:SOFTENER_THRESHOLD}
    DETERGENT_THRESHOLD: ${env:DETERGENT_THRESHOLD}

functions:
  api:
    image:
      name: appimage
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    events:
      - http:
          method: any
          path: /{any+}