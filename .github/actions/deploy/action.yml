name: 'Deploy'
description: 'Deploy the project to AWS Lambda'
branding:
  icon: 'settings'
  color: 'green'

inputs:
  branch-name:
    description: 'Branch name'
    required: true
  database-url:
    description: 'Database URL'
    required: true
  serverless-access-key:
    description: 'Serverless Access Key'
    required: true
  slack-web-hook:
    description: 'Slack WebHook URL'
    required: true
  slack-channel-name:
    description: 'Slack channel name'
    required: true

runs:
  using: 'composite'
  steps:
    - name: 'Use Node.js ${{ matrix.node-version }}'
      uses: actions/setup-node@v3
      with:
        node-version: '${{ matrix.node-version }}'
        cache: 'yarn'

    - uses: docker/setup-buildx-action@v2
      id: buildx
      with:
        install: true

    - name: Docker Build
      shell: bash
      run: |
        docker build .
      env:
        DATABASE_URL: ${{ inputs.database-url }}

    - name: Serverless Deploy
      uses: serverless/github-action@v3.1
      with:
        args: deploy --stage production
      env:
        DATABASE_URL: ${{ inputs.database-url }}
        SERVERLESS_ACCESS_KEY: ${{ inputs.serverless-access-key }}

    - name: Notify Slack on Success
      if: ${{ success() }}
      uses: ./.github/actions/slack-notifier
      with:
        action-status: ${{ job.status }}
        slack-web-hook: ${{ inputs.slack-web-hook }}
        slack-channel-name: ${{ inputs.slack-channel-name }}
        title: 'Deploy Success :pass:'
        message: 'Deploy on ${{ inputs.branch-name }} succeeded :pass: :fireparrot: :sheepy:'

    - name: Notify Slack on Failure
      if: ${{ failure() }}
      uses: ./.github/actions/slack-notifier
      with:
        action-status: ${{ job.status }}
        slack-web-hook: ${{ inputs.slack-web-hook }}
        slack-channel-name: ${{ inputs.slack-channel-name }}
        title: 'Deploy Failed :fail:'
        message: 'Deploy on ${{ inputs.branch-name }} failed :fail: :terror: :alert:'
